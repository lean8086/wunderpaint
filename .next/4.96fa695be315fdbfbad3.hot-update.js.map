{"version":3,"file":"4.96fa695be315fdbfbad3.hot-update.js","sources":["webpack:///components/Layer.js","webpack:///containers/Layer.js"],"sourcesContent":["import React, { Component } from 'react';\nimport store from '../store';\n\n// import './Layer.css';\n\nclass Layer extends Component {\n  constructor(props) {\n    super(props);\n    const { scale, width, height } = store.getState().counter;\n    this.state = {\n      scale,\n      width,\n      height,\n    };\n    store.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    const { scale, width, height } = store.getState().counter;\n    this.setState({\n      scale,\n      width,\n      height,\n    });\n  }\n\n  componentDidMount() {\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  getImageData() {\n    return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height).data;\n  }\n\n  putImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const pixel = data.slice(pos, pos + 4);\n        this.ctx.fillStyle = `rgba(${pixel.join(',')})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  slowAndSafePutImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const [r, g, b, a] = [\n          data[pos],\n          data[pos + 1],\n          data[pos + 2],\n          data[pos + 3] / 255,\n        ];\n        this.ctx.fillStyle = `rgba(${r},${g},${b},${a})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <canvas\n        className='Layer'\n        width={this.state.width}\n        height={this.state.height}\n        style={{ transform: `scale(${this.state.scale})` }}\n        ref={c => this.canvas = c}\n      />\n    );\n  }\n}\n\nexport default Layer;\n\n\n\n// WEBPACK FOOTER //\n// components/Layer.js","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Layer from '../components/Layer';\n\nclass LayerContainer extends Component {\n  componentDidMount() {\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  getImageData() {\n    return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height).data;\n  }\n\n  putImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const pixel = data.slice(pos, pos + 4);\n        this.ctx.fillStyle = `rgba(${pixel.join(',')})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  slowAndSafePutImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const [r, g, b, a] = [\n          data[pos],\n          data[pos + 1],\n          data[pos + 2],\n          data[pos + 3] / 255,\n        ];\n        this.ctx.fillStyle = `rgba(${r},${g},${b},${a})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <canvas\n        className='Layer'\n        width={this.state.width}\n        height={this.state.height}\n        style={{ transform: `scale(${this.state.scale})` }}\n        ref={c => this.canvas = c}\n      />\n    );\n  }\n}\n\nexport default LayerContainer;\n\n\n\n// WEBPACK FOOTER //\n// containers/Layer.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AARA;AASA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAxEA;AACA;AA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AApDA;AACA;AAsDA;;;;A","sourceRoot":""}