{"version":3,"file":"4.997c2af7b5253f57894b.hot-update.js","sources":["webpack:///containers/Layer.js","webpack:///containers/Workspace.js"],"sourcesContent":["import { Component } from 'react';\nimport store from '../store';\n\n// import './LayerContainer.css';\n\nclass LayerContainer extends Component {\n  constructor(props) {\n    super(props);\n    const { scale, width, height } = store.getState().counter;\n    this.state = {\n      scale,\n      width,\n      height,\n    };\n    store.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    const { scale, width, height } = store.getState().counter;\n    this.setState({\n      scale,\n      width,\n      height,\n    });\n  }\n\n  componentDidMount() {\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  getImageData() {\n    return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height).data;\n  }\n\n  putImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const pixel = data.slice(pos, pos + 4);\n        this.ctx.fillStyle = `rgba(${pixel.join(',')})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  slowAndSafePutImageData(data) {\n    const { width, height } = this.canvas;\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pos = (y * width + x) * 4;\n        const [r, g, b, a] = [\n          data[pos],\n          data[pos + 1],\n          data[pos + 2],\n          data[pos + 3] / 255,\n        ];\n        this.ctx.fillStyle = `rgba(${r},${g},${b},${a})`;\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <canvas\n        className='Layer'\n        width={this.state.width}\n        height={this.state.height}\n        style={{ transform: `scale(${this.state.scale})` }}\n        ref={c => this.canvas = c}\n      />\n    );\n  }\n}\n\nexport default LayerContainer;\n\n\n\n// WEBPACK FOOTER //\n// containers/Layer.js","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateCanvas } from '../store';\nimport Layer from './Layer';\nimport Grid from './Grid';\n\nclass WorkspaceContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToolExecuting: false,\n    };\n  }\n\n  snapshot() {\n    this.props.sync(this.layer.getImageData());\n    this.timer = setTimeout(() => this.props.sync(), 3 * 1000);\n  }\n\n  handleEvent(actionName, ev) {\n    if (!tools[this.props.tool][actionName]) return;\n    const { tool, color, scale } = this.props;\n    const pageX = ev.pageX || ev.touches[0].pageX || 0;\n    const pageY = ev.pageY || ev.touches[0].pageY || 0;\n\n    // TODO: move to state\n    tools[tool][actionName]({\n      x: Math.round((pageX - this.layer.canvas.offsetLeft + this.element.scrollLeft) / scale - .5),\n      y: Math.round((pageY - this.layer.canvas.offsetTop + this.element.scrollTop) / scale - .5),\n      color,\n      scale,\n      shadowLayer: this.shadowLayer,\n      layer: this.layer,\n    });\n  }\n\n  handleClick(ev) {\n    this.setState({ isToolExecuting: false });\n    this.handleEvent('handleClick', ev);\n  }\n\n  handleMouseDown(ev) {\n    this.setState({ isToolExecuting: true });\n    this.handleEvent('handleMouseDown', ev);\n    if (this.timer) clearTimeout(this.timer);\n  }\n\n  handleMouseUp(ev) {\n    this.setState({ isToolExecuting: false });\n    this.handleEvent('handleMouseUp', ev);\n    this.snapshot();\n  }\n\n  handleMouseMove(ev) {\n    if (this.state.isToolExecuting) {\n      this.handleEvent('handleMouseMove', ev);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        onClick={(ev) => this.handleClick(ev)}\n        onMouseDown={(ev) => this.handleMouseDown(ev)}\n        onMouseUp={(ev) => this.handleMouseUp(ev)}\n        onMouseMove={(ev) => this.handleMouseMove(ev)}\n      >\n        <div className='Canvas'>\n          <Layer ref={l => this.layer = l} />\n          <Layer ref={l => this.shadowLayer = l} />\n          <Grid />\n        </div>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  color: state.color,\n  scale: state.scale,\n  tool: state.tool,\n  canvas: state.canvas,\n  width: state.width,\n  height: state.height,\n});\n\nconst mapDispatchToProps = {\n  updateCanvas,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspaceContainer);\n\n\n\n// WEBPACK FOOTER //\n// containers/Workspace.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AARA;AASA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAxEA;AACA;AA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApEA;AACA;AAoEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AACA;AAQA;AACA;AADA;AAIA;;;;A","sourceRoot":""}